name: Build + Push Docker Image and Push to K8S cluster

on:
  push:
   branches:
      - "**"
   tags:
    - "v*.*.*"
      
jobs:

  setup:
    runs-on: ubuntu-latest
    outputs:
      repo: ${{ steps.vars.outputs.repo }}
      tag: ${{ steps.vars.outputs.tag }}
    steps:
      - name: Build variables
        id: vars
        run: |
          echo "::set-output name=repo::$GITHUB_REPOSITORY"
          echo "::set-output name=tag::$(git rev-parse --short "$GITHUB_SHA")"
      
  docker-build-and-push:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            amolokov/diplom
                     
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{raw}}
           
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_USER}}
          password: ${{secrets.DOCKER_PASS}}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
     
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  push-to-k8s:
     needs: [setup, docker-build-and-push]
     runs-on: ubuntu-latest
     steps:
      - name: Connect to K8S
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.IP_MASTER }}
          username: ${{ secrets.DOCKER_USER }}
          key: ${{ secrets.SSH_PR }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            sudo helm upgrade diplom-chart-chart diplom-chart -n app --set image.tag=${{ needs.setup.outputs.tags }}
            
 
